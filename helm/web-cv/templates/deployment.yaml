apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "web-cv.fullname" . }}
  labels:
    {{- include "web-cv.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "web-cv.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "web-cv.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "web-cv.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["gunicorn"]
          args: ["my_cv.wsgi", "--bind", "0.0.0.0:8000"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DEBUG
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-env-file"
                  key: DEBUG
            - name: SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-env-file"
                  key: SECRET_KEY
            - name: DJANGO_ALLOWED_HOSTS
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-env-file"
                  key: DJANGO_ALLOWED_HOSTS
            - name: DATABASE_ENGINE
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-env-file"
                  key: DATABASE_ENGINE
            - name: DATABASE_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-env-file"
                  key: DATABASE_PASSWORD
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: "{{ .Release.Name }}-config-env-file"
                  key: DATABASE_HOST          
          ports:
            - name: web
              containerPort: {{ .Values.ports.containerPort }}
              protocol: TCP